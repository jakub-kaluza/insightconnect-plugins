# GENERATED BY KOMAND SDK - DO NOT EDIT
import insightconnect_plugin_runtime
import json


class Component:
    DESCRIPTION = "Creates or updates a comment for a given incident."


class Input:
    APIVERSION = "api-version"
    ETAG = "etag"
    INCIDENTID = "incidentId"
    RESOURCEGROUPNAME = "resourceGroupName"
    SEVERITY = "severity"
    STATUS = "status"
    SUBSCRIPTIONID = "subscriptionId"
    TITLE = "title"
    WORKSPACENAME = "workspaceName"
    

class Output:
    ALERTPRODUCTNAMES = "alertProductNames"
    ALERTSCOUNT = "alertsCount"
    ASSIGNEDTO = "assignedTo"
    BOOKMARKSCOUNT = "bookmarksCount"
    CLASSIFICATION = "classification"
    CLASSIFICATIONCOMMENT = "classificationComment"
    CLASSIFICATIONREASON = "classificationReason"
    COMMENTSCOUNT = "commentsCount"
    CREATEDTIMEUTC = "createdTimeUtc"
    DESCRIPTION = "description"
    EMAIL = "email"
    ETAG = "etag"
    FIRSTACTIVITYTIMEUT = "firstActivityTimeUt"
    ID = "id"
    INCIDENTNUMBER = "incidentNumber"
    INCIDENTURL = "incidentUrl"
    LABELS = "labels"
    LASTACTIVITYTIMEUTC = "lastActivityTimeUtc"
    LASTMODIFIEDTIMEUTC = "lastModifiedTimeUtc"
    NAME = "name"
    OWNERSOBJECTID = "ownersObjectId"
    RELATEDANALYTICRULEIDS = "relatedAnalyticRuleIds"
    SEVERITY = "severity"
    STATUS = "status"
    TACTICS = "tactics"
    TITLE = "title"
    TYPE = "type"
    USERPRINCIPALNAME = "userPrincipalName"
    

class CreateIncidentInput(insightconnect_plugin_runtime.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "api-version": {
      "type": "string",
      "title": "API version",
      "description": "The API version to use for this operation.",
      "order": 6
    },
    "etag": {
      "type": "string",
      "title": "etag",
      "description": "etag of the azure resource",
      "order": 5
    },
    "incidentId": {
      "type": "string",
      "title": "Incident ID",
      "description": "Incident ID",
      "order": 1
    },
    "resourceGroupName": {
      "type": "string",
      "title": "Resource Group Name",
      "description": "The name of the resource group within the user's subscription. The name is case insensitive.",
      "order": 2
    },
    "severity": {
      "type": "string",
      "title": "Incidents severity",
      "description": "Incidents severity",
      "enum": [
        "High",
        "Informational",
        "Low",
        "Medium"
      ],
      "order": 8
    },
    "status": {
      "type": "string",
      "title": "Incidents status",
      "description": "Incidents status",
      "enum": [
        "Active",
        "Closed",
        "New"
      ],
      "order": 9
    },
    "subscriptionId": {
      "type": "string",
      "title": "Subscription ID",
      "description": "Azure subscription ID Regex pattern: ^[0-9A-Fa-f]{8}-([0-9A-Fa-f]{4}-){3}[0-9A-Fa-f]{12}$",
      "order": 3
    },
    "title": {
      "type": "string",
      "title": "Incidents title",
      "description": "The Incidents title",
      "order": 7
    },
    "workspaceName": {
      "type": "string",
      "title": "Workspace Name",
      "description": "The name of the workspace",
      "order": 4
    }
  },
  "required": [
    "api-version",
    "incidentId",
    "resourceGroupName",
    "severity",
    "status",
    "subscriptionId",
    "title",
    "workspaceName"
  ]
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class CreateIncidentOutput(insightconnect_plugin_runtime.Output):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "alertProductNames": {
      "type": "array",
      "title": "Alert product names",
      "items": {
        "type": "string"
      },
      "order": 27
    },
    "alertsCount": {
      "type": "integer",
      "title": "Alerts Count",
      "order": 24
    },
    "assignedTo": {
      "type": "string",
      "title": "assigned to",
      "order": 23
    },
    "bookmarksCount": {
      "type": "integer",
      "title": "Bookmarks Count",
      "order": 25
    },
    "classification": {
      "type": "string",
      "title": "classification",
      "order": 9
    },
    "classificationComment": {
      "type": "string",
      "title": "classification comment",
      "order": 11
    },
    "classificationReason": {
      "type": "string",
      "title": "classification reason",
      "order": 10
    },
    "commentsCount": {
      "type": "integer",
      "title": "Comments count",
      "order": 26
    },
    "createdTimeUtc": {
      "type": "string",
      "title": "creation time in utc",
      "displayType": "date",
      "format": "date-time",
      "order": 16
    },
    "description": {
      "type": "string",
      "title": "Incident description",
      "order": 6
    },
    "email": {
      "type": "string",
      "title": "Owner's email",
      "order": 21
    },
    "etag": {
      "type": "string",
      "title": "etag",
      "order": 4
    },
    "firstActivityTimeUt": {
      "type": "string",
      "title": "first activity time in utc",
      "displayType": "date",
      "format": "date-time",
      "order": 13
    },
    "id": {
      "type": "string",
      "title": "Full Incident ID",
      "order": 1
    },
    "incidentNumber": {
      "type": "integer",
      "title": "Incident number",
      "order": 17
    },
    "incidentUrl": {
      "type": "string",
      "title": "incidents url",
      "order": 19
    },
    "labels": {
      "type": "array",
      "title": "etag",
      "items": {
        "type": "string"
      },
      "order": 12
    },
    "lastActivityTimeUtc": {
      "type": "string",
      "title": "last activity time in utc",
      "displayType": "date",
      "format": "date-time",
      "order": 14
    },
    "lastModifiedTimeUtc": {
      "type": "string",
      "title": "Last modified time in utc",
      "displayType": "date",
      "format": "date-time",
      "order": 15
    },
    "name": {
      "type": "string",
      "title": "Incident ID",
      "order": 2
    },
    "ownersObjectId": {
      "type": "string",
      "title": "Owners's object ID",
      "order": 20
    },
    "relatedAnalyticRuleIds": {
      "type": "array",
      "title": "Ids of related incidents",
      "items": {
        "type": "string"
      },
      "order": 18
    },
    "severity": {
      "type": "string",
      "title": "Severity level",
      "order": 7
    },
    "status": {
      "type": "string",
      "title": "etag",
      "order": 8
    },
    "tactics": {
      "type": "array",
      "title": "tacticts",
      "items": {
        "type": "string"
      },
      "order": 28
    },
    "title": {
      "type": "string",
      "title": "Incident Title",
      "order": 5
    },
    "type": {
      "type": "string",
      "title": "Name",
      "order": 3
    },
    "userPrincipalName": {
      "type": "string",
      "title": "Owner's principal name",
      "order": 22
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
