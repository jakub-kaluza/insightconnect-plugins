# GENERATED BY KOMAND SDK - DO NOT EDIT
import insightconnect_plugin_runtime
import json


class Component:
    DESCRIPTION = "Create or update a Watchlist and its Watchlist Items (bulk creation, e.g. through text/csv content type). To create a Watchlist and its Items, we should call this endpoint with rawContent and contentType properties."


class Input:
    APIVERSION = "api-version"
    PROPERTIES = "properties"
    RESOURCEGROUPNAME = "resourceGroupName"
    SUBSCRIPTIONID = "subscriptionId"
    WATCHLISTALIAS = "watchlistAlias"
    WORKSPACENAME = "workspaceName"
    

class Output:
    pass

class CreateUpdateWatchlistInput(insightconnect_plugin_runtime.Input):
    schema = json.loads("""
   {
  "type": "object",
  "title": "Variables",
  "properties": {
    "api-version": {
      "type": "string",
      "title": "API version",
      "description": "The API version to use for this operation.",
      "order": 4
    },
    "properties": {
      "$ref": "#/definitions/WatchlistProperties",
      "title": "Watchlist Properties",
      "description": "all the properties included in the body of the query.",
      "order": 6
    },
    "resourceGroupName": {
      "type": "string",
      "title": "Resource Group Name",
      "description": "The name of the resource group within the user's subscription. The name is case insensitive.",
      "order": 1
    },
    "subscriptionId": {
      "type": "string",
      "title": "Subscription ID",
      "description": "Azure subscription ID Regex pattern: ^[0-9A-Fa-f]{8}-([0-9A-Fa-f]{4}-){3}[0-9A-Fa-f]{12}$",
      "order": 2
    },
    "watchlistAlias": {
      "type": "string",
      "title": "Watchlist Alias",
      "description": "The watchlist alias",
      "order": 5
    },
    "workspaceName": {
      "type": "string",
      "title": "Workspace Name",
      "description": "The name of the workspace",
      "order": 3
    }
  },
  "required": [
    "api-version",
    "properties",
    "resourceGroupName",
    "subscriptionId",
    "watchlistAlias",
    "workspaceName"
  ],
  "definitions": {
    "UserInfo": {
      "type": "object",
      "title": "UserInfo",
      "properties": {
        "email": {
          "type": "string",
          "title": "Email",
          "description": "The email of the user.",
          "order": 1
        },
        "name": {
          "type": "string",
          "title": "Name",
          "description": "The name of the user.",
          "order": 2
        },
        "objectId": {
          "type": "string",
          "title": "Object Identification",
          "description": "The object id of the user.",
          "order": 3
        }
      }
    },
    "WatchlistProperties": {
      "type": "object",
      "title": "WatchlistProperties",
      "properties": {
        "contentType": {
          "type": "string",
          "title": "Content Type",
          "description": "The content type of the raw content. For now, only text/csv is valid",
          "order": 1
        },
        "created": {
          "type": "string",
          "title": "The time the watchlist was created",
          "description": "The time the watchlist was created",
          "order": 2
        },
        "createdBy": {
          "$ref": "#/definitions/UserInfo",
          "title": "Created By",
          "description": "Describes a user that created the watchlist",
          "order": 3
        },
        "defaultDuration": {
          "type": "string",
          "title": "Default Duration",
          "description": "The default duration of a watchlist (in ISO 8601 duration format)",
          "order": 4
        },
        "description": {
          "type": "string",
          "title": "A description of the watchlist",
          "description": "A description of the watchlist",
          "order": 5
        },
        "displayName": {
          "type": "string",
          "title": "The display name of the watchlist",
          "description": "The display name of the watchlist",
          "order": 6
        },
        "isDeleted": {
          "type": "boolean",
          "title": "isDeleted flag",
          "description": "A flag that indicates if the watchlist is deleted or not",
          "order": 7
        },
        "itemsSearchKey": {
          "type": "string",
          "title": "Items Search Key",
          "description": "The search key is used to optimize query performance when using watchlists for joins with other data. For example, enable a column with IP addresses to be the designated SearchKey field, then use this field as the key field when joining to other event data by IP address.",
          "order": 8
        },
        "labels": {
          "type": "array",
          "title": "List of labels relevant to this watchlist",
          "description": "List of labels relevant to this watchlist",
          "items": {
            "type": "string"
          },
          "order": 9
        },
        "numberOfLinesToSkip": {
          "type": "integer",
          "title": "Number of lines to skip",
          "description": "The number of lines in a csv content to skip before the header",
          "order": 10
        },
        "provider": {
          "type": "string",
          "title": "The provider of the watchlist",
          "description": "The provider of the watchlist",
          "order": 11
        },
        "rawContent": {
          "type": "string",
          "title": "Raw Content",
          "description": "The raw content that represents to watchlist items to create. Example : This line will be skipped header1,header2 value1,value2",
          "order": 12
        },
        "source": {
          "type": "string",
          "title": "The source of the watchlist",
          "description": "The source of the watchlist",
          "enum": [
            "Local File",
            "Remote Storage"
          ],
          "order": 13
        },
        "tenantId": {
          "type": "string",
          "title": "The tenantId where the watchlist belongs to",
          "description": "The tenantId where the watchlist belongs to",
          "order": 14
        },
        "updated": {
          "type": "string",
          "title": "The last time the watchlist was updated",
          "description": "The last time the watchlist was updated",
          "order": 15
        },
        "updatedBy": {
          "$ref": "#/definitions/UserInfo",
          "title": "Describes a user that updated the watchlist",
          "description": "Describes a user that updated the watchlist",
          "order": 16
        },
        "uploadStatus": {
          "type": "string",
          "title": "Watchlist Upload Status",
          "description": "The status of the Watchlist upload : New, InProgress or Complete. Note : When a Watchlist upload status is InProgress, the Watchlist cannot be deleted",
          "enum": [
            "New",
            "InProgress",
            "Complete"
          ],
          "order": 17
        },
        "watchlistAlias": {
          "type": "string",
          "title": "The alias of the watchlist",
          "description": "The alias of the watchlist",
          "order": 18
        },
        "watchlistId": {
          "type": "string",
          "title": "The id (a Guid) of the watchlist",
          "description": "The id (a Guid) of the watchlist",
          "order": 19
        },
        "watchlistType": {
          "type": "string",
          "title": "The type of the watchlist",
          "description": "The type of the watchlist",
          "order": 20
        }
      },
      "definitions": {
        "UserInfo": {
          "type": "object",
          "title": "UserInfo",
          "properties": {
            "email": {
              "type": "string",
              "title": "Email",
              "description": "The email of the user.",
              "order": 1
            },
            "name": {
              "type": "string",
              "title": "Name",
              "description": "The name of the user.",
              "order": 2
            },
            "objectId": {
              "type": "string",
              "title": "Object Identification",
              "description": "The object id of the user.",
              "order": 3
            }
          }
        }
      }
    }
  }
}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)


class CreateUpdateWatchlistOutput(insightconnect_plugin_runtime.Output):
    schema = json.loads("""
   {}
    """)

    def __init__(self):
        super(self.__class__, self).__init__(self.schema)
